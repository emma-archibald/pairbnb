continue
@listings
@listings.count
@listings
@listings.first
p @listings
@listings
@listings.count
@listings
continue
listing_test.count
listing_test
amenities.each{|amenity| listing_test = listing_test.where(:name => amenity)}
amenities.each{|amenity| listing_test = listing_test.where(amenity.name => amenity)}
listing_test = Listing
listing_test = Listing.all
@listings.has_amenities(amenities)
@listings.has_amenities(amenities).count
@listings.has_amenities(amenities)
arr == (arr3)
arr.include?(arr3)
arr3 = [1,2,3,4,5,6]
arr.include?(arr2)
arr2 = [2,1,3,4,5,6]
arr = [1,2,3,4,5,6]
@listings.has_amenities("Gym").class
@listings.has_amenities("Gym")
test_listing
amenities.each {|amenity| test_listing = test_listing.has_amenities(amenity)}
test_listing = @listings
Listing.count
amenities.each {|amenity| test_listing = test_listing.has_amenities(amenity)}
test_listing = ""
amenities
Listing.all.has_amenities("Gym").has_amenities("Pool").count
Listing.all.has_amenities("Gym").has_amenities("Pool")
Listing.all.has_amenities("Gym").count
Listing.all.has_amenities("Gym")
@listings.has_amenities("Gym").pluck(:id)
@listings.has_amenities("WiFi").pluck(:id)
@listings.has_amenities("Pool").pluck(:id)
@listings.has_amenities("Pool")
@listings.has_amenities("WiFi").has_amenities("Pool")
@listings.has_amenities("WiFi")
@listings
amenities
n
amenities
Listing.find(33).amenities.pluck(:name)
Listing.find(33).amenities,pluck(:name)
Listing.find(33).amenities
Listing.find(33)
c
cc
c
@listings.has_amenities("Pool").count
@listings.has_amenities("WiFi").count
@listings.has_amenities("Gym").count
@listings.has_amenities("Gym")
@listings.has_amenities("WiFi").has_amenities("Gym")
amenities
@listings.has_amenities("WiFi").has_amenities("Pool")
@listings.has_amenities("WiFi")
amenities
@listings.has_amenities(['Wifi'])
@listings.has_amenities(['Wifi']))
@listings.has_amenities("Wifi")
@listings.count
@listings
amenities
n
amenities
continue
amenities
continue
@listings.has_amenity(params[:wifi])
params
continue
params
continue
@listings = @listings.nightly_rate(params[:min], params[:max]) if params[:min].present?
@listings = Listing.paginate(:page => params[:page], :per_page => 3)
@listings = @listings.nightly_rate(params[:min], params[:max]) if params[:min].present?
@listing = @listing.nightly_rate(params[:min], params[:max]) if params[:min].present?
params
continue
reload!
l.has_amenity("WiFi")
reload!
l.amenities.second
l.amenities.first
l.amenities
l = Listing.
@listing
params
continue
params
continue
exit
params
continue
exit
@reservation.save
@reservation
exit
@reservation
result.transaction.credit_card_details.last_4
result.transaction.last_4
result.transaction.amount.to_s.to_i
result.transaction.amount.to_s
result.transaction.amount
result.transaction.id
result.transaction.amount
result
exit
session[:reservation_id]
exit
nonce-from-the-client
exit
puts result.to_yaml
pp result.to_yaml
pp result.to_json
pp result.to
pp result
result.transaction.credit_card_details.last_4
result.transaction["last_4"]
result.transaction.last_4
result.class
result
exit
@reservation.errors.each { |e,v| puts v}
@reservation.errors
@reservation.errors.to_sentence
@reservation.errors.each {|e| puts e.to_sentence}
@reservation.errors
exit
@listing.avatars
params
exit
exir
exit
params[:user][:avatar]
params[:file]
exit
params[:user][:avatar]
params[:avatar]
params
exit
params[:listing_amenities][:amenity_ids]
params
